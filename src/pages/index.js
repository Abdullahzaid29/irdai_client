import React, { useEffect, useState } from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useRouter } from "next/router";
import axios from "axios";
import { toast } from "react-toastify";
import Link from "next/link";
import Image from "next/image";
import { useAuth } from "utils/auth";
function Signin() {
  const router = useRouter();
  const { isAuthenticated } = useAuth();

  const [pusername, setusername] = useState("");
  const [ppassword, setpassword] = useState("");
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [forgetpasslink, setforgetpasslink] = useState("");

  const openModal = () => {
    setIsModalOpen(true);
    forgot_password();
  };

  const closeModal = () => {
    setIsModalOpen(false);
  };
  const submit = async () => {
    let params = {
      username: pusername,
      password: ppassword,
    };

    try {
      await axios({
        method: "post",
        url: "http://localhost:7000/api/signin",
        withCredentials: false,
        data: {
          username: pusername,
          password: ppassword,
        },
      }).then((res) => {
        console.log(res);
        localStorage.setItem("token", res.data.token);
      });
      await router.push("/home");
      toast("Sucessfully loged in", {
        hideProgressBar: true,
        autoClose: 2000,
        type: "success",
      });
    } catch (err) {
      console.log("pages auth in error");
      console.log(err);
      toast("invalid credentials", {
        hideProgressBar: true,
        autoClose: 2000,
        type: "error",
      });
    }
  };
  const forgot_password = async () => {
    try {
      await axios
        .post("https://irdai-server.onrender.com/api/forgotpassword", {
          username: pusername,
        })
        .then((res) => {
          setforgetpasslink(res.data.Link);
          console.log(res.data.Link);
        });
    } catch (error) {
      console.log(error);
    }
  };
  return (
    <section>
      <Head>
        <title>IRDAI</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0"
        />
      </Head>
      <main className="flex items-center justify-center h-screen bg-white">
        <form>
          <div className="w-96 p-6 rounded-2xl shadow-2xl  bg-white ">
            <div className="flex justify-center items-center">
              <Image
                src="/logo.jpg"
                width={150}
                height={100}
                alt="Picture of the logo"
              />
            </div>
            <div className="flex justify-center items-center mb-2">
              <h2 className=" text-2xl font-bold mb-2">Sign in to Account</h2>
            </div>
            <div className="flex justify-center items-center mb-4">
              <div className="border-2 w-12 border-orange-400"></div>
            </div>

            <label className="text-gray-700 text-sm ">username or email</label>
            <input
              className="w-full py-2 bg-gray-50  px-1 outline-none mb-4 mt-2 flex-1 text-xs"
              type="email"
              name="email"
              placeholder="Email"
              onChange={(e) => setusername(e.target.value)}
              required
            />
            <label className="text-gray-700 text-sm ">password</label>
            <input
              className="w-full py-2 bg-gray-50  px-1 outline-none mb-4  mt-2 flex-1 text-xs"
              type="password"
              name="password"
              placeholder="password"
              onChange={(e) => setpassword(e.target.value)}
              required
            />
            <div className="flex justify-between">
              <label
                htmlFor="remember"
                className="text-gray-700 text-xs items-center flex"
              >
                <input className="mr-1" type="checkbox" id="remember" />
                Remember me
              </label>
              <a
                href="#"
                className="text-xs text-blue-600"
                onClick={pusername ? openModal : console.log("error")}
              >
                Forgot Password?
              </a>
            </div>
            {/* <button type="submit" class ="btnPost btnBlue">Post</button> */}
            <div className="items-center justify-center flex mt-4">
              <a
                className="border-2 border-green-500 text-green-500 rounded-full px-12 py-2 inline-block font-semibold hover:bg-green-500 hover:text-white cursor-pointer"
                onClick={submit}
              >
                Sign In
              </a>
            </div>
          </div>
        </form>
        <div
          className={`fixed inset-0 flex items-center justify-center  ${
            isModalOpen ? "" : "hidden"
          } `}
        >
          <div className="bg-white p-8 rounded-lg shadow-lg">
            <h2 className="text-lg font-semibold mb-2">Forgot Password?</h2>
            <p className="text-gray-600 mb-4">
              A Link Has Been Generated To Reset Password
            </p>

            <button
              onClick={() => {
                console.log(forgetpasslink);
              }}
              className="w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600"
            >
              <Link
                href={forgetpasslink}
                rel="noopener noreferrer"
                target="_blank"
              >
                Open Link
              </Link>
            </button>
            <button
              onClick={closeModal}
              className="w-full bg-gray-300 text-gray-800 p-2 mt-2 rounded hover:bg-gray-400"
            >
              Close
            </button>
          </div>
        </div>
      </main>
    </section>
  );
}

export default Signin;
